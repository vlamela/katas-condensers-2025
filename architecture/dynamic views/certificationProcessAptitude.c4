views {
    // Shared local styles
    style element.kind != actor {
        notation "C4 Software Systems - unchanged"
    }
    style multimodalEmbeddingsPipeline {
        notation "C4 Software Systems - added for AI extension"
        color green
    }
    style multimodalEmbeddingsPipeline.orchestrator, multimodalEmbeddingsPipeline.textExtractor, multimodalEmbeddingsPipeline.imagesExtractor, multimodalEmbeddingsPipeline.textPreprocessor, multimodalEmbeddingsPipeline.imagePreprocessor, multimodalEmbeddingsPipeline.textTokenizer, multimodalEmbeddingsPipeline.textEmbeddingsGenerator, multimodalEmbeddingsPipeline.imageEmbeddingsGenerator, multimodalEmbeddingsPipeline.embeddingsStore, multimodalEmbeddingsPipeline.formatConvertor {
        notation "C4 Containers - added for AI extension"
        color green
    }
    dynamic view certificationProcessAptitudeTest {
        title "Dynamic view of the 'Certification Process (Test 1: Aptitude Test)' use case"
        
        candidate -> candidateTestingUi.ui
        candidateTestingUi.ui -> aptitudeTestTaker.testLoader
        aptitudeTestTaker.testLoader -> aptitudeTestMaintenanceService.testDatabase
        candidateTestingUi.ui -> aptitudeTestTaker.testTimer
        candidateTestingUi.ui -> aptitudeTestTaker.answerCapture
        
        aptitudeTestTaker.answerCapture -> aptitudeTestTaker.questionSender

        parallel {
            aptitudeTestTaker.questionSender -> aptitudeAutoGrader.multipleChoice
            aptitudeTestTaker.questionSender -> aptitudeManualCapture.shortAnswer
        }

        aptitudeManualGrader.shortAnswer -> aptitudeManualCapture.shortAnswer
        
    }
}