model {
    actor candidate {
        description "Candidate for certification"
    }
    actor designatedExpert {
        description "Expert software architect designated to add or modify aptitude test questions or case studies"
    }
    actor expert {
        description "Expert software architect designated to grade candidate submissions"
    }
    actor companyAdmin {
        description "Company administrator"
    }

    // Admin
    softwareSystem companyAdminUi {
        description "Company Admin User Interface"
    }
    softwareSystem expertAdminUi {
        description "Expert Admin User Interface"
    }
    softwareSystem userMaintenanceService {
        description "User Maintenance Service"
    }
    softwareSystem aptitudeTestMaintenanceService {
        description "Aptitude Test Maintenance Service"
    }
    softwareSystem caseStudyMaintenanceService {
        description "Case Study Maintenance Service"
    }
    softwareSystem aptitudeTestAnalysisService {
        description "Aptitude Test Analysis Service"
    }

    softwareSystem multimodalEmbeddingsPipeline {
        description "Generates embeddings from multimodal input (text and images)"
    }

    companyAdmin -> companyAdminUi "manages expert software architects and their profiles"
    expert -> companyAdminUi "manages own profile"
    designatedExpert -> companyAdminUi "manages own profile"
    companyAdminUi -> userMaintenanceService "manages expert software architects and their profiles"

    designatedExpert -> expertAdminUi "analyzes aptitude test results"
    expertAdminUi -> aptitudeTestAnalysisService "analyzes aptitude test results"

    designatedExpert -> expertAdminUi "manages aptitude test questions"
    expertAdminUi -> aptitudeTestMaintenanceService "manages aptitude test questions"
    aptitudeTestMaintenanceService -> multimodalEmbeddingsPipeline "generates embeddings from text input (text of aptitude test questions and answers)"

    designatedExpert -> expertAdminUi "manages case studies"
    expertAdminUi -> caseStudyMaintenanceService "manages case studies"
    aptitudeTestMaintenanceService -> multimodalEmbeddingsPipeline "generates embeddings from multimodal input (text and images from case study)"

    // Aptitude Test (test 1)
    softwareSystem candidateTestingUi {
        description "Candidate Testing User Interface"
    }
    softwareSystem expertGradingUi {
        description "Expert Grading User Interface"
    }
    softwareSystem candidateRegistrationService {
        description "Candidate Registration Service"
    }
    softwareSystem aptitudeTestTaker {
        description "Aptitude Test Taker"
    }
    softwareSystem aptitudeManualCapture {
        description "Aptitude Manual Capture"
    }
    softwareSystem aptitudeAutoGrader {
        description "Aptitude Auto Grader"
    }
    softwareSystem aptitudeManualGrader {
        description "Aptitude Manual Grader"
    }
    softwareSystem candidateStatusService
    softwareSystem candidateAptitudeNotification

    candidate -> candidateTestingUi "registers candidate for certification"
    candidateTestingUi -> candidateRegistrationService "registers candidate for certification"

    candidate -> candidateTestingUi "takes aptitude test"
    candidateTestingUi -> aptitudeTestTaker "takes aptitude test"
    aptitudeTestTaker -[async]-> aptitudeManualCapture "captures aptitude test short answers"
    aptitudeTestTaker -[async]-> aptitudeAutoGrader "grades aptitude test multiple choice answers"

    expert -> expertGradingUi "grades aptitude test, provides feedback"
    expertGradingUi -> aptitudeManualGrader "grades aptitude test, provides feedback"
    aptitudeManualGrader -> aptitudeManualCapture "receives short answers of aptitude test"
    aptitudeManualGrader -> aptitudeAutoGrader "receives grade of aptitude test multiple choice"
    aptitudeManualGrader -> candidateStatusService "updates candidate' aptitude test status"
    aptitudeManualGrader -> candidateAptitudeNotification "notifies candidate of test results, provides feedback, provides instructions on how to proceed"

    candidate -> candidateTestingUi "checks progress of certification attempt"
    candidateTestingUi -> candidateStatusService "checks progress of certification attempt"

    // Architecture Solution (test 2)
    softwareSystem certificationViewerUi
    softwareSystem caseStudyRetrievalService
    softwareSystem architectureSubmissionService
    softwareSystem architectureManualGrader {
        description "Architecture Manual Grader"
    }
    softwareSystem candidateCertificationService
    softwareSystem candidateArchitectureNotification
    softwareSystem certificationViewerService

    candidate -> candidateTestingUi "retrieves case study"
    candidateTestingUi -> caseStudyRetrievalService "retrieves case study"
    caseStudyRetrievalService -> candidateStatusService "updates candidate' architecture solution status"

    candidate -> candidateTestingUi "uploads architecture solution"
    candidateTestingUi -> architectureSubmissionService "uploads architecture solution"
    architectureSubmissionService -> candidateStatusService "updates candidate' architecture solution status"

    expert -> expertGradingUi "grades architecture solution, provides feedback"
    expertGradingUi -> architectureManualGrader "grades architecture solution, provides feedback"
    architectureManualGrader -> architectureSubmissionService "gets architecture solution"
    architectureManualGrader -> candidateStatusService "gets candidate' architecture solution status"
    architectureManualGrader -> candidateCertificationService "generates and stores certificate"
    architectureManualGrader -> candidateArchitectureNotification "notifies candidate of their grade for the architecture submission, provides feedback, provides instructions on how to proceed"

    candidate -> certificationViewerUi "views certificate"
    certificationViewerUi -> certificationViewerService "views certificate"
    certificationViewerService -> candidateCertificationService "gets certificate"
}

views {

    // Shared local styles
    style element.kind != actor {
        notation "C4 Software Systems - unchanged"
    }
    style aptitudeManualGrader, architectureManualGrader {
        notation "C4 Software Systems - changed for AI extension"
        color amber
    }
    style multimodalEmbeddingsPipeline {
        notation "C4 Software Systems - added for AI extension"
        color green
    }

    view landscape {

        group "Actors" {
            include element.kind == actor
        }
        
        group "Administrative" {
            include companyAdminUi
            include expertAdminUi
            include userMaintenanceService
            include aptitudeTestMaintenanceService
            include caseStudyMaintenanceService
            include aptitudeTestAnalysisService
        }

        group "Aptitude Test" {
            include candidateTestingUi
            include expertGradingUi
            include candidateRegistrationService
            include aptitudeTestTaker
            include aptitudeManualCapture
            include aptitudeAutoGrader
            include aptitudeManualGrader
            include candidateStatusService
            include candidateAptitudeNotification
            include multimodalEmbeddingsPipeline
        }

        group "Case Study" {
            include certificationViewerUi
            include caseStudyRetrievalService
            include architectureSubmissionService
            include architectureManualGrader
            include candidateCertificationService
            include candidateArchitectureNotification
            include certificationViewerService
        }
    }

    view administrativeSystemContext {
        include companyAdminUi
        include expertAdminUi
        include userMaintenanceService
        include aptitudeTestMaintenanceService
        include caseStudyMaintenanceService
        include aptitudeTestAnalysisService
        include multimodalEmbeddingsPipeline
    }

    view aptitudeTestSystemContext {
        group "Users" {
            include candidate
            include expert
        }
        group "UI" {
            include candidateTestingUi
            include expertGradingUi
        }
        group "Registration" {
            include candidateRegistrationService
        }
        group "Aptitude Test" {
            include aptitudeTestTaker
        }
        group "Grading" {
            include aptitudeManualCapture
            include aptitudeAutoGrader
            include aptitudeManualGrader
        }
        group "Certification status" {
            include candidateStatusService
        }
        group "Notification" {
            include candidateAptitudeNotification
        }
    }

    view architectureSolutionSystemContext {
        group "Users" {
            include candidate
            include expert
        }
        group "UI" {
            include candidateTestingUi
            include expertGradingUi
            include certificationViewerUi
        }
        group "Case Study" {
            include caseStudyRetrievalService
        }
        group "Submission" {
            include architectureSubmissionService
        }
        group "Grading" {
            include architectureManualGrader
        }
        group "Certification status" {
            include candidateStatusService
            include candidateCertificationService
            include certificationViewerService
        }
        group "Notification" {
            include candidateArchitectureNotification
        }
    }
    
}